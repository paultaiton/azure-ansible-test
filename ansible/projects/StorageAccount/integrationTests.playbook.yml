---
- name: Storage Account List Play
  hosts: localhost
  vars:
    #   ONE of az_subscription_name or id, or neither for default sub.
    #az_subscription_name: 
    #az_subscription_id: 

    #   Optional filters: WILL BE DELETED AT END
    az_resource_group_name: ansible-test-storage-accounts
    #az_resource_group_tags:
    #  - name: keyname
    #    value: keyvalue
  gather_facts: no # not necessary at this time; localhost provides no useful info.
  collections:
    - azure.azcollection
  tasks:
    - name: Gather subscription information
      azure.azcollection.azure_rm_subscription_info:
        name: "{{ az_subscription_name | default(omit) }}"
        id: "{{ az_subscription_id | default(omit) }}"
      register: az_subscriptions
      when: az_subscription_name is defined or az_subscription_id is defined

    - name: Set subscription facts
      set_fact:
        az_subscription_id: "{{ az_subscriptions.subscriptions[0].subscription_id }}"
        az_subscription_name: "{{ az_subscriptions.subscriptions[0].display_name }}"
      when: not az_subscriptions.skipped | default(false)

    - name: Create resource Group
      azure.azcollection.azure_rm_resourcegroup:
        name: "{{ az_resource_group_name }}"
        location: 'westus'
        state: present

    - name: Default Storage Account
      azure.azcollection.azure_rm_storageaccount:
        name: "paultaitondefaults"
        account_type: "Standard_LRS"
        resource_group: "{{ az_resource_group_name }}"
        subscription_id: "{{ az_subscription_id | default(omit) }}"
      register: az_storage_account

    - set_fact:
        storage_name_list: "{{ (storage_name_list | default([]) ) | union([az_storage_account.state.name]) }}"

    - name: Storage Account Types
      azure.azcollection.azure_rm_storageaccount:
        name: "ptxa{{ item.name  | lower }}"
        account_type: "{{ item.type }}"  # cannot be omitted.
        resource_group: "{{ az_resource_group_name }}"
        subscription_id: "{{ az_subscription_id | default(omit) }}"
        kind: "{{ item.kind | default('StorageV2') }}"
        access_tier: "{{ item.access_tier | default(omit) }}"
        https_only: "{{ item.https_only | default(omit) }}"
        minimum_tls_version: "{{ item.minimum_tls_version | default(omit) }}"
        allow_blob_public_access: "{{ item.allow_blob_public_access | default(omit) }}"
      register: az_storage_account
      loop:
        - name: Default
          type: Standard_LRS
        - name: Storage
          kind: Storage
          type: Standard_LRS
          https_only: False
        - kind: StorageV2
          name: StorageV2
          type: Standard_LRS
          minimum_tls_version: 'TLS1_1'
        - kind: BlobStorage
          name: BlobStorage
          access_tier: Hot
          type: Standard_LRS
          allow_blob_public_access: False
        - kind: FileStorage
          name: FileStorage
          type: Premium_LRS
          allow_blob_public_access: True
        - kind: BlockBlobStorage
          name: BlockBlobStorage
          type: Premium_LRS

    - set_fact:
        storage_name_list: "{{ (storage_name_list | default([]) ) | union(az_storage_account.results | json_query('[*].state.name') ) }}"

    - name: Delete Resource Group
      azure.azcollection.azure_rm_resourcegroup:
        name: "{{ az_resource_group_name }}"
        force_delete_nonempty: True
        state: absent

